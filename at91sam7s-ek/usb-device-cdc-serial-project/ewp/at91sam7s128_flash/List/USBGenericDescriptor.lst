###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.50.0.51878/W32 for ARM     14/Mar/2021  19:14:52 #
# Copyright (C) 1999-2010 IAR Systems AB.                                     #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\Projects\in-18-nixie-clock\at91lib\usb\common\core\US #
#                    BGenericDescriptor.c                                     #
#    Command line =  C:\Projects\in-18-nixie-clock\at91lib\usb\common\core\US #
#                    BGenericDescriptor.c -D at91sam7s128 -D flash -D         #
#                    TRACE_LEVEL=3 -lC C:\Projects\in-18-nixie-clock\at91sam7 #
#                    s-ek\usb-device-cdc-serial-project\ewp\at91sam7s128_flas #
#                    h\List\ --remarks --diag_suppress Pe826,Pe1375 -o        #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\at91sam7s128_flash\Obj\ --debug     #
#                    --endian=little --cpu=ARM7TDMI -e --fpu=None             #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 5.4\arm\INC\DLib_Config_Full. #
#                    h" -I C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-dev #
#                    ice-cdc-serial-project\ewp\..\..\..\at91lib/peripherals\ #
#                     -I C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-devic #
#                    e-cdc-serial-project\ewp\..\..\..\at91lib/components\    #
#                    -I C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device #
#                    -cdc-serial-project\ewp\..\..\..\at91lib/usb/device\ -I  #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\..\..\..\at91lib\ -I                #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\..\..\..\external_libs\ -I          #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\..\..\..\at91lib/boards/at91sam7s-e #
#                    k\ -I "C:\Program Files (x86)\IAR Systems\Embedded       #
#                    Workbench 5.4\arm\INC\" --interwork --cpu_mode arm -Ohz  #
#    List file    =  C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\at91sam7s128_flash\List\USBGenericD #
#                    escriptor.lst                                            #
#    Object file  =  C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\at91sam7s128_flash\Obj\USBGenericDe #
#                    scriptor.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Projects\in-18-nixie-clock\at91lib\usb\common\core\USBGenericDescriptor.c
      1          /* ----------------------------------------------------------------------------
      2           *         ATMEL Microcontroller Software Support 
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2008, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /*
     31              Title: USBGenericDescriptor implementation
     32          
     33              About: Purpose
     34                  Implementation of the USBGenericDescriptor class.
     35          */
     36          
     37          //------------------------------------------------------------------------------
     38          //         Headers
     39          //------------------------------------------------------------------------------
     40          
     41          #include "USBGenericDescriptor.h"
     42          
     43          //------------------------------------------------------------------------------
     44          //         Exported functions
     45          //------------------------------------------------------------------------------
     46          
     47          //------------------------------------------------------------------------------
     48          /// Returns the length of a descriptor.
     49          /// \param descriptor Pointer to a USBGenericDescriptor instance.
     50          /// \return Length of descriptor in bytes.
     51          //------------------------------------------------------------------------------

   \                                 In section .text, align 4, keep-with-next
     52          unsigned int USBGenericDescriptor_GetLength(
     53              const USBGenericDescriptor *descriptor)
     54          {
     55              return descriptor->bLength;
   \                     USBGenericDescriptor_GetLength:
   \   00000000   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000004   1EFF2FE1           BX       LR               ;; return
     56          }
     57          
     58          //------------------------------------------------------------------------------
     59          /// Returns the type of a descriptor.
     60          /// \param descriptor Pointer to a USBGenericDescriptor instance.
     61          /// \return Type of descriptor.
     62          //------------------------------------------------------------------------------

   \                                 In section .text, align 4, keep-with-next
     63          unsigned char USBGenericDescriptor_GetType(
     64              const USBGenericDescriptor *descriptor)
     65          {
     66              return descriptor->bDescriptorType;
   \                     USBGenericDescriptor_GetType:
   \   00000000   0100D0E5           LDRB     R0,[R0, #+1]
   \   00000004   1EFF2FE1           BX       LR               ;; return
     67          }
     68          
     69          //------------------------------------------------------------------------------
     70          /// Returns a pointer to the descriptor right after the given one, when
     71          /// parsing a Configuration descriptor.
     72          /// \param descriptor - Pointer to a USBGenericDescriptor instance.
     73          /// \return Pointer to the next descriptor.
     74          //------------------------------------------------------------------------------

   \                                 In section .text, align 4, keep-with-next
     75          USBGenericDescriptor *USBGenericDescriptor_GetNextDescriptor(
     76              const USBGenericDescriptor *descriptor)
     77          {
     78              return (USBGenericDescriptor *)
     79                  (((char *) descriptor) + USBGenericDescriptor_GetLength(descriptor));
   \                     USBGenericDescriptor_GetNextDescriptor:
   \   00000000   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000004   000081E0           ADD      R0,R1,R0
   \   00000008   1EFF2FE1           BX       LR               ;; return
     80          }

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     USBGenericDescriptor_GetLength      0
     USBGenericDescriptor_GetNextDescriptor
                                         0
     USBGenericDescriptor_GetType        0


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     USBGenericDescriptor_GetLength    8
     USBGenericDescriptor_GetType      8
     USBGenericDescriptor_GetNextDescriptor
                                      12

 
 28 bytes in section .text
 
 28 bytes of CODE memory

Errors: none
Warnings: none
