###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.50.0.51878/W32 for ARM     14/Mar/2021  19:14:51 #
# Copyright (C) 1999-2010 IAR Systems AB.                                     #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\Projects\in-18-nixie-clock\at91lib\usb\common\cdc\CDC #
#                    SetControlLineStateRequest.c                             #
#    Command line =  C:\Projects\in-18-nixie-clock\at91lib\usb\common\cdc\CDC #
#                    SetControlLineStateRequest.c -D at91sam7s128 -D flash    #
#                    -D TRACE_LEVEL=3 -lC C:\Projects\in-18-nixie-clock\at91s #
#                    am7s-ek\usb-device-cdc-serial-project\ewp\at91sam7s128_f #
#                    lash\List\ --remarks --diag_suppress Pe826,Pe1375 -o     #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\at91sam7s128_flash\Obj\ --debug     #
#                    --endian=little --cpu=ARM7TDMI -e --fpu=None             #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 5.4\arm\INC\DLib_Config_Full. #
#                    h" -I C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-dev #
#                    ice-cdc-serial-project\ewp\..\..\..\at91lib/peripherals\ #
#                     -I C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-devic #
#                    e-cdc-serial-project\ewp\..\..\..\at91lib/components\    #
#                    -I C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device #
#                    -cdc-serial-project\ewp\..\..\..\at91lib/usb/device\ -I  #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\..\..\..\at91lib\ -I                #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\..\..\..\external_libs\ -I          #
#                    C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\..\..\..\at91lib/boards/at91sam7s-e #
#                    k\ -I "C:\Program Files (x86)\IAR Systems\Embedded       #
#                    Workbench 5.4\arm\INC\" --interwork --cpu_mode arm -Ohz  #
#    List file    =  C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\at91sam7s128_flash\List\CDCSetContr #
#                    olLineStateRequest.lst                                   #
#    Object file  =  C:\Projects\in-18-nixie-clock\at91sam7s-ek\usb-device-cd #
#                    c-serial-project\ewp\at91sam7s128_flash\Obj\CDCSetContro #
#                    lLineStateRequest.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Projects\in-18-nixie-clock\at91lib\usb\common\cdc\CDCSetControlLineStateRequest.c
      1          /* ----------------------------------------------------------------------------
      2           *         ATMEL Microcontroller Software Support 
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2008, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          /**
     31           CDCSetControlLineStateRequest.c
     32          
     33           !!!Purpose
     34          
     35           Implementation of the CDCSetControlLineStateRequest class.
     36          */
     37          
     38          //------------------------------------------------------------------------------
     39          //         Headers
     40          //------------------------------------------------------------------------------
     41          
     42          #include "CDCSetControlLineStateRequest.h"
     43          
     44          //------------------------------------------------------------------------------
     45          //         Exported functions
     46          //------------------------------------------------------------------------------
     47          
     48          //------------------------------------------------------------------------------
     49          /// Notifies if the given request indicates that the DTE signal is present.
     50          /// \param request Pointer to a USBGenericRequest instance.
     51          /// \return 1 if the DTE signal is present, otherwise 0.
     52          //------------------------------------------------------------------------------

   \                                 In section .text, align 4, keep-with-next
     53          unsigned char CDCSetControlLineStateRequest_IsDtePresent(
     54              const USBGenericRequest *request)
     55          {
   \                     CDCSetControlLineStateRequest_IsDtePresent:
   \   00000000   00502DE9           PUSH     {R12,LR}
     56              if ((USBGenericRequest_GetValue(request) & 0x0001) != 0) {
   \   00000004   ........           BL       USBGenericRequest_GetValue
   \   00000008   010010E3           TST      R0,#0x1
     57          
     58                  return 1;
   \   0000000C   ........           B        ?Subroutine0
     59              }
     60              else {
     61          
     62                  return 0;
     63              }
     64          }

   \                                 In section .text, align 4, keep-with-next
   \                     ?Subroutine0:
   \   00000000   0100A013           MOVNE    R0,#+1
   \   00000004   0000A003           MOVEQ    R0,#+0
   \   00000008   0240BDE8           POP      {R1,LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return
     65          
     66          //------------------------------------------------------------------------------
     67          /// Notifies if the given request indicates that the device carrier should
     68          /// be activated.
     69          /// \param request Pointer to a USBGenericRequest instance.
     70          /// \return 1 is the device should activate its carrier, 0 otherwise.
     71          //------------------------------------------------------------------------------

   \                                 In section .text, align 4, keep-with-next
     72          unsigned char CDCSetControlLineStateRequest_ActivateCarrier(
     73              const USBGenericRequest *request)
     74          {
   \                     CDCSetControlLineStateRequest_ActivateCarrier:
   \   00000000   00502DE9           PUSH     {R12,LR}
     75              if ((USBGenericRequest_GetValue(request) & 0x0002) != 0) {
   \   00000004   ........           BL       USBGenericRequest_GetValue
   \   00000008   020010E3           TST      R0,#0x2
     76          
     77                  return 1;
   \   0000000C                      REQUIRE ?Subroutine0
   \   0000000C                      ;; // Fall through to label ?Subroutine0
     78              }
     79              else {
     80          
     81                  return 0;
     82              }
     83          }
     84          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     CDCSetControlLineStateRequest_ActivateCarrier
                                         8
     CDCSetControlLineStateRequest_IsDtePresent
                                         8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     CDCSetControlLineStateRequest_IsDtePresent
                                      16
     ?Subroutine0                     16
     CDCSetControlLineStateRequest_ActivateCarrier
                                      12

 
 44 bytes in section .text
 
 44 bytes of CODE memory

Errors: none
Warnings: none
